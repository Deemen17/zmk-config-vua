/*
*
* Copyright (c) 2023 Deemen17
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        EscTilde: EscTilde {
            compatible = "zmk,behavior-mod-morph";
            label = "ESCTILDE";
            bindings = <&kp ESC>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&kp F1  &kp F2   &EscTilde  &kp N1    &kp N2  &kp N3    &kp N4  &kp N5     &kp N6  &kp N7  &kp N8     &kp N9  &kp N0     &kp MINUS  &kp EQUAL  &kp BACKSLASH  &kp DELETE     &kp HOME
&kp F3  &kp F4   &kp TAB    &kp Q     &kp W   &kp E     &kp R   &kp T              &kp Y   &kp U      &kp I   &kp O      &kp P      &kp LBKT   &kp RBKT       &kp BACKSPACE  &kp DEL
&kp F5  &kp F6   &kp CLCK   &kp A     &kp S   &kp D     &kp F   &kp G              &kp H   &kp J      &kp K   &kp L      &kp SEMI   &kp SQT                   &kp RET        &kp PG_UP
&kp F7  &kp F8   &kp LSHFT            &kp Z   &kp X     &kp C   &kp V      &kp B           &kp N      &kp M   &kp COMMA  &kp DOT    &kp SLASH  &kp RSHFT      &kp UP         &kp PG_DN
&kp F9  &kp F10  &kp LCTRL  &kp LGUI          &kp LALT  &mo 1   &kp SPACE                  &kp SPACE                     &kp RALT   &kp RCTRL  &kp LEFT       &kp DOWN       &kp RIGHT
            >;
        };

        function_layer {
            label = "Functions";
            bindings = <
&bootloader  &trans  &kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &bootloader
&sys_reset   &trans  &trans     &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans   &trans   &trans   &trans  &trans  &sys_reset
&trans       &trans  &trans     &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans   &trans   &trans           &trans  &trans
&trans       &trans  &trans             &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans   &trans  &trans  &trans
&trans       &trans  &trans     &trans          &trans  &trans  &trans                  &trans                   &trans   &trans   &trans  &trans  &trans
            >;
        };
    };
};
